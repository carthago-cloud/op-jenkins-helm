---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: jenkinsauthorizations.carthago.cloud
spec:
  group: carthago.cloud
  names:
    kind: JenkinsAuthorization
    listKind: JenkinsAuthorizationList
    plural: jenkinsauthorizations
    singular: jenkinsauthorization
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: JenkinsAuthorization is the Schema for the JenkinsAuthorization
          API. It is not available in the free plan and requires a valid license.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: JenkinsAuthorizationSpec defines the desired state of JenkinsAuthorization.
              It configures the granular access for users.
            properties:
              matrix:
                description: 'Matrix is matrix-based authorization configuration NOTE:
                  It requires additional plugin'
                properties:
                  users:
                    description: Users is list of the users with permissions
                    items:
                      description: User contains name and permissions
                      properties:
                        name:
                          description: Name is a name of a user
                          type: string
                        permissions:
                          description: Permissions is list of permissions
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              roleBased:
                description: 'RoleBased is role-based authorization configuration
                  NOTE: It requires additional plugin'
                properties:
                  roles:
                    description: Roles is list of the users with permissions
                    items:
                      properties:
                        name:
                          description: Name of the role
                          type: string
                        permissions:
                          description: Permissions assigned to the role
                          items:
                            type: string
                          type: array
                        usersOrGroups:
                          description: UsersOrGroups to which this role is assigned
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              type:
                description: Type indicates which authorization provider is set
                type: string
            required:
            - type
            type: object
          status:
            description: JenkinsAuthorizationStatus defines the observed state of
              JenkinsAuthorization
            properties:
              conditions:
                description: Conditions contains JenkinsAuthorization statuses
                items:
                  properties:
                    lastProbeTime:
                      description: Last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: 'Status is the status of the condition. Can be
                        True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                      type: string
                    type:
                      description: 'Type is the type of the condition. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              hash:
                description: Hash contains hash computed when running this script
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
