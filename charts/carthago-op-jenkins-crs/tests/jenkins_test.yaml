suite: test Jenkins
templates:
  - jenkins.yaml
tests:
  - it: should propagate all the declared metadata fields
    values:
      - values/jenkins_test_values.yaml
    asserts:
      - isAPIVersion:
          of: carthago.cloud/v1beta1
      - isKind:
          of: Jenkins
      - equal:
          path: metadata.name
          value: jenkins
      - equal:
          path: metadata.namespace
          value: null
      - equal:
          path: metadata.labels
          value:
            labelTestKey: labelTestValue
      - equal:
          path: metadata.annotations
          value:
            annotationsTestKey: annotationsTestValue
  - it: should propagate all the declared spec fields
    values:
      - values/jenkins_test_values.yaml
    asserts:
      - equal:
          path: spec.podLabels
          value:
            podLabelTestKey: podLabelTestValue
      - contains:
          path: spec.podSpec.initContainers
          content:
            name: init-container-name
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
      - contains:
          path: spec.podSpec.containers
          content:
            name: jenkins-controller
            image: jenkins/jenkins:2.302.2-lts-alpine
            imagePullPolicy: IfNotPresent
            command: ["-bash", "-sh", "/scripts/init.sh"]
            livenessProbe:
              failureThreshold: 12
              httpGet:
                path: /login
                port: http
                scheme: HTTP
              initialDelaySeconds: 80
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /login
                port: http
                scheme: HTTP
              initialDelaySeconds: 30
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 1500m
                memory: 3Gi
              requests:
                cpu: 1
                memory: 500Mi
            env:
              - name: JENKINS_HOME
                value: "/var/lib/jenkins"
            envFrom:
              - configMapRef:
                  name: test-config
            volumeMounts:
              - mountPath: /home/user/bin/backup.sh
                name: backup-scripts
                readOnly: true
                subPath: backup.sh
      - contains:
          path: spec.podSpec.containers
          content:
            name: sidecar-container-name
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            command: ['sh', '-c', 'echo The app is running! && sleep 3600']
            livenessProbe:
              failureThreshold: 12
              httpGet:
                path: /login
                port: http
                scheme: HTTP
              initialDelaySeconds: 100
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 6
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /login
                port: http
                scheme: HTTP
              initialDelaySeconds: 40
              periodSeconds: 20
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: 1500m
                memory: 3Gi
              requests:
                cpu: 1
                memory: 500Mi
            volumeMounts:
              - name: sidecar-volume
                mountPath: /var/jenkins/sidecar
      - contains:
          path: spec.podSpec.volumes
          content:
            name: backup-scripts
            configMap:
              defaultMode: 0754
              name: jenkins-operator-backup-s3
      - contains:
          path: spec.podSpec.tolerations
          content:
            key: "key1"
            operator: "Equal"
            value: "value1"
            effect: "NoSchedule"
      - contains:
          path: spec.plugins
          content:
            name: jacoco
            version: 3.1.1
      - equal:
          path: spec.services
          value:
            http:
              labels:
                my-http-key: "my-http-value"
              spec:
                type: NodePort
                ports:
                  protocol: TCP
                  port: 8080
                  targetPort: 8080
            agent:
              labels:
                my-agent-key: "my-agent-value"
              spec:
                type: ClusterIP
                ports:
                  protocol: TCP
                  port: 50000
                  targetPort: 50000
      - contains:
          path: spec.roles
          content:
            apiGroup: "rbac.authorization.k8s.io"
            kind: "Role"
            name: role
      - equal:
          path: spec.homePVC
          value:
            accessMode: "ReadWriteOnce"
            resourceStorage: "20Gi"
      - equal:
          path: spec.pluginsCache
          value:
            accessMode: "ReadWriteOnce"
            resourceStorage: "1Gi"
      - contains:
          path: spec.podSpec.imagePullSecrets
          content: secret
      - equal:
          path: spec.podSpec.securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.podSpec.securityContext.fsGroup
          value: 1000
      - equal:
          path: spec.authorizationStrategy
          value: createUser
      - equal:
          path: spec.disableCSRFProtection
          value: false
      - equal:
          path: spec.pluginSnapshot.restoreEnabled
          value: false
      - equal:
          path: spec.pluginSnapshot.snapshotConfigMapRef.name
          value: "config-map-name"
      - equal:
          path: spec.pluginSnapshot.snapshotHistoryLength
          value: 3